@import "./variables.css";

/* Mixins */
:root {
  /* Elements which can fade */
  --sideshow-fadable-element: {
    transition: opacity var(--sideshow-long-transition-duration) ease;
  }

  /* A Sideshow mask */
  --sideshow-mask: {
    @apply --sideshow-fadable-element;
    position: fixed;
    opacity: var(--sideshow-mask-opacity);
    background-color: var(--sideshow-mask-background-color);
  }

  --sideshow-button: {
    border-radius: 3px;
    transition: background-color var(--sideshow-fast-transition-duration) ease;
    background-color: var(--sideshow-button-background-color);
    border: solid 1px color(var(--sideshow-button-background-color) lightness(- 10%));
    padding: 5px;
    text-transform: uppercase;
    color: var(--sideshow-button-foreground-color);

    &:hover {
      background-color: color(var(--sideshow-button-background-color) lightness(- 10%));
    }

    &:disabled {
      background-color: #bbb !important; /* No fade effects here */
      border-color: #999;
    }
  }
}

/* Masks a subject */
.sideshow-subject-mask {
  @apply --sideshow-mask;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 14999;
  width: 0;
  height: 0;
}

/* A part of the composite mask (the mask used by Sideshow to surround a subject) */
.sideshow-mask-part {
  @apply --sideshow-mask;
  z-index: 15000;
}

/* A part of the composite mask to be positionated at the corners of a subject
 * (if the subject has rounded corners). It uses a dynamically generated SVG to
 * cover the white hole which remains when masking rounded corner subjects */
.sideshow-mask-corner-part {
  @apply --sideshow-mask;
  background-color: transparent;
  z-index: 15001;
  overflow: hidden;
  & svg {
    position: absolute;
    left: 0;
    top: 0;
    & path {
      fill: var(--sideshow-mask-background-color);
    }
  }

  &.leftTop {
    transform: rotate(0deg);
  }

  &.rightTop {
    transform: rotate(90deg);
  }

  &.leftBottom {
    transform: rotate(270deg);
  }

  &.rightBottom {
    transform: rotate(180deg);
  }
}

/* CSS way to make something invisible but holding space */
.sideshow-invisible {
  opacity: 0 !important;
}

/* CSS way to avoid rendering something */
.sideshow-hidden {
  display: none !important;
}

/* Occupying the biggest of the four parts of the composite mask */
.sideshow-details-panel {
  position: fixed;
  z-index: 15001;
}

/* An area positionaed over the .sideshow-details-panel where the step
 * description text is shown */
.sideshow-step-description {
  @apply --sideshow-fadable-element;
  position: absolute;
  display: inline-block;
  background-color: color(var(--sideshow-step-description-background-color) alpha(70%));
  padding: 21px;
  font-size: 14px;

  /* The step title */
  & h2 {
    display: inline-block;
    font-size: var(--sideshow-big-font-size);
    text-transform: uppercase;
    color: var(--sideshow-step-description-title-color);
    margin-bottom: 10px;
  }

  /* The step position indicator (e.g. 3/11 -> The step 3 of 11) */
  & .sideshow-step-position {
    display: inline-block;
    font-family: var(--sideshow-default-semibold-font-family);
    font-size: var(--sideshow-big-font-size);
    color: var(--sideshow-step-position-color);
    margin-right: 10px;
  }

  /* The description itself */
  & .sideshow-step-text {
    clear: both;
    display: block;
    color: var(--sideshow-step-text-color);
    line-height: calc(var(--sideshow-default-font-size) + 10px);

    & code {
      font-family: monospace, courier;
    }
  }

  /* The "next/finish" button */
  & .sideshow-next-step-button {
    @apply --sideshow-button;
    float: right;
    margin-top: 10px;
  }

  /* Lists (when using Markdown Syntax you can use lists in the step description) */
  & ul, ol {
    padding-left: 40px;
  }

  /* An unordered list (when using Markdown Syntax you can use lists in the step description) */
  & ul {
    list-style-type: disc;
  }

  /* An ordered list (when using Markdown Syntax you can use lists in the step description) */
  & ol {
    list-style-type: decimal;
  }
}

/* An arrow used for pointing to an item inside the highlighted subject which deserves attention at the moment */
.sideshow-subject-arrow {
  @apply --sideshow-fadable-element;
  color: var(--sideshow-subject-arrow-color);
  position: fixed;
  z-index: 15003;
  opacity: 0.8;
  backface-visibility: hidden;
  animation: var(--sideshow-long-transition-duration) ease infinite sideshow-subject-arrow-animation;

  &.right {
    animation-name: sideshow-subject-arrow-animation-right;
    transform: rotate(90deg);
  }

  &.bottom {
    transform: rotate(180deg);
    animation-name: sideshow-subject-arrow-animation-bottom;
  }

  &.left {
    transform: rotate(270deg);
    animation-name: sideshow-subject-arrow-animation-left;
  }

  &:before{
    line-height: 0.5;
  }
}

/* The initial sideshow menu where user chooses a tutorial */
.sideshow-wizard-menu {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  width: 750px;
  height: 400px;
  z-index: 15002;

  /* The initial menu title */
  & .sideshow-wizard-menu-title {
    animation-name: sideshow-wizard-menu-title-slideright;
    animation-duration: 2s;
    animation-timing-function: ease;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;

    text-transform: uppercase;
    color: var(--sideshow-wizard-menu-title-color);
    font-size: 32px;
    font-family: var(--sideshow-default-light-font-family);
    position: relative;
    font-weight: normal;
  }

  /* The initial menu tutorial list */
  & ul {
    padding: 0;
    margin: 0;
    & li {
      &:before, &:after {
        content: ' ';
        display: table;
      }
      &:after {
        clear: both
      }
      list-style-type: none;
      cursor: pointer;
      opacity: 0;
      position: relative;
      left: -90px;
      animation-name: sideshow-wizard-menu-item-slidedown;
      animation-duration: 2s;
      animation-timing-function: ease;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;

      height: 50px;
      overflow: hidden;
      margin-top: 20px;
/*
      for i in (1..15){
        &:nth-child({i}){
          animation-delay: 300ms + (i * 300ms);
        }
      } 
*/   
      & h2 {
        transition: color var(--sideshow-default-transition-duration) ease;
        font-family: var(--sideshow-default-light-font-family);
        font-size: 12px;
        font-weight: normal;
        text-transform: uppercase;
        color: var(--sideshow-wizard-menu-item-foreground-color);
        margin: 0;
      }

      & .sideshow-wizard-menu-item-description{
        color: var(--sideshow-wizard-menu-item-foreground-color);
        font-size: 12px;
      }

      & .sideshow-wizard-menu-item-estimated-time {
        transition: border-right var(--sideshow-default-transition-duration) ease;
        border-right: solid 0 var(--sideshow-wizard-menu-item-foreground-color);
        opacity: 0.5;
        font-size: 10px;
        color: var(--sideshow-wizard-menu-item-foreground-color);
        float: left;
        height: 50px;
        width: 80px;
        margin-right: 10px;
        position: relative;
        &:before {
          margin-right: 5px;
        }
      }

      &:hover {
        & h2 {
          color: var(--sideshow-wizard-menu-item-hover-foreground-color);
        }
        & .sideshow-wizard-menu-item-estimated-time {
          border-right: solid 20px var(--sideshow-wizard-menu-item-foreground-color);
        }
      }
    }
  }

  /* This class rule defines the closing animation for Sideshow menu */
  &.sideshow-menu-closed {
    & h1 {
      animation-name: sideshow-wizard-menu-title-fadeout;
      animation-duration: var(--sideshow-long-transition-duration);
      animation-timing-function: ease;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
    }
    
    & ul {
      & li {
        opacity: 1;
        animation-name: sideshow-wizard-menu-item-slideleft;
        animation-duration: var(--sideshow-long-transition-duration);
        animation-timing-function: ease;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
/*
        for i in (1..15){
          &:nth-child({i}){
            animation-delay: 150ms + (i * 100ms);
          }
        }
*/
      }
    }
  }
}

/* The Sideshow close button */
.sideshow-close-button {
  text-shadow: 0 0 5px #030, 0 0 3px #000, 0 2px 3px #000;
  transition: text-shadow var(--sideshow-default-transition-duration) ease;
  border-width: 0;
  background-color: transparent !important;
  z-index: 15005;
  position: fixed;
  color: var(--sideshow-close-button-foreground-color);
  font-size: var(--sideshow-medium-font-size);
  bottom: 25px;
  right: 25px;
  cursor: pointer;
  text-transform: uppercase;
  
  &:hover {
    text-shadow: 0 0 10px #030, 0 0 6px #000, 0 2px 5px #000, 0 0 7px #000;
    background-color: transparent !important;
    left: auto;
    top: auto;
  }
  
  &:active {
    outline-width: 0 !important;
  }
  
  &:before {
    margin-right: 5px;
  }
}

/* The Sideshow initial menu style when no tutorials are available */
.sideshow-no-wizards-available {
  animation-name: sideshow-wizard-menu-item-slidedown;
  animation-duration: 2s;
  animation-timing-function: ease;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  color: var(--sideshow-wizard-menu-item-foreground-color);
  opacity: 0;
  position: relative;
  height: 50px;
  margin-top: 20px;
}
